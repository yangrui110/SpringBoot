<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yangframe.web.core.crud.dao.mysql.MysqlAjaxCrudDao">

    <!--通过主键查找对应的一条数据-->
    <select id="findByPK" resultType="java.util.Map">
        select * from ${entityName} a where
        <foreach collection="mapData" index="key"  item="data" separator=" and ">
            a.${key} = #{data}
        </foreach>
    </select>
    <select id="findAll" resultType="java.util.Map">
        select ${condition.columns} from ${condition.mainTable} ${condition.mainAlias} ${condition.joins}
        <trim prefix="where">
            ${condition.condition}
            <!--<foreach item="value" index="index" collection="condition.cons" separator=" and " >
                <if test="value.right !='' and value.right != null">
                    ${value.left} ${value.operator} #{value.right}
                </if>
            </foreach>-->
        </trim>
        <if test="condition.orderBy != null">
            order by ${condition.orderBy}
        </if>
        <if test="condition.start!=null and condition.end != null">
            limit ${condition.start} , ${condition.end}
        </if>

    </select>

    <select id="findAllNoPage" resultType="java.util.Map">
        select ${condition.columns} from ${condition.mainTable} ${condition.mainAlias} ${condition.joins}
        <trim prefix="where">
            ${condition.condition}
            <!--<foreach item="value" index="index" collection="condition.cons" separator=" and " >
                <if test="value.right !='' and value.right != null">
                    ${value.left} ${value.operator} #{value.right}
                </if>
            </foreach>-->
        </trim>
        <if test="condition.orderBy != null">
            order by ${condition.orderBy}
        </if>
    </select>

    <select id="totalNum" resultType="int">
        select count(1) from ${condition.mainTable} ${condition.mainAlias} ${condition.joins}
        <trim prefix="where">
            ${condition.condition}
        </trim>
    </select>

    <insert id="insert">
        insert into ${entityName}
        <foreach item="value" index="key" collection="data" separator=" , " open="(" close=")">
            ${key}
        </foreach>
        value
        <foreach item="value" index="key" collection="data" separator=" , " open="(" close=")">
            #{value}
        </foreach>
    </insert>

    <update id="update">
        update ${entityName} a
        set
        <foreach collection="data" separator="," item="value" index="key">
            a.${key} = #{value}
        </foreach>
        <trim prefix="where" prefixOverrides="and" >
            <foreach collection="cons" separator="and" item="value" index="key">
                a.${key} = #{value}
            </foreach>
        </trim>
    </update>

    <delete id="delete">
        delete from ${entityName} a
        <trim prefix="where" prefixOverrides="and" >
            <foreach collection="cons" separator="," item="value" index="key">
                a.${key} = #{value}
            </foreach>
        </trim>
    </delete>

    <insert id="insertAll">
      insert into ${entityName}
        <foreach item="value" index="key" collection="keys" separator=" , " open="(" close=")">
            ${value}
        </foreach>
        values
        <foreach item="mapOne" index="index" collection="data" separator=" , ">
            <foreach collection="mapOne" index="key" item="dataValue" separator="," close=")" open="(">
                #{dataValue}
            </foreach>
        </foreach>
    </insert>

    <delete id="deleteAll">
        delete from ${entityName} where
        <foreach collection="pks" separator="and" item="pk" index="key">
            ${key} in
            <foreach collection="pk" item="value" separator="," open="(" close=")" index="i">
                #{value}
            </foreach>
        </foreach>
    </delete>

    <update id="updateAll">
        update ${entityName} set
        <foreach collection="data" index="key" item="value" separator=",">
            <if test="value !=null and value !=''">
                ${key} = ${value}
            </if>
        </foreach>
        where
        <foreach collection="pks" separator="and" item="pk" index="key">
            ${key} in
            <foreach collection="pk" item="value" separator="," open="(" close=")" index="i">
                #{value}
            </foreach>
        </foreach>
    </update>

</mapper>