<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yangframe.web.core.crud.dao.oracle.OracleAjaxCrudDao">

    <!--通过主键查找对应的一条数据-->
    <select id="findByPK" resultType="java.util.Map">
        select * from ${entityName} a where
        <foreach collection="mapData" index="key"  item="data" separator=" and ">
            a.${key} = #{data}
        </foreach>
    </select>
    <select id="findAll" resultType="java.util.Map">
        select *  from (select ${condition.columns}
        <if test="condition.orderBy != null and condition.orderBy != ''">
            , row_number() over( order by ${condition.orderBy}) as RowNumber
        </if>
        from ${condition.mainTable} ${condition.mainAlias} ${condition.joins}
        <trim prefix="where" prefixOverrides="and">
            <if test="condition.condition!='' and condition.condition!=null">
                and ${condition.condition}
            </if>
            <if test="condition.end != null and condition.start != null">
                and ROWNUM &lt;= ${condition.end}
            </if>
        </trim>
        )
        <trim prefix="where">
            <if test="condition.start != null and condition.start != null">
                RowNumber &gt; ${condition.start}
            </if>
        </trim>
    </select>

    <select id="findAllNoPage" resultType="java.util.Map">
        select ${condition.columns}
        <if test="condition.orderBy != null and condition.orderBy != ''">
            , row_number() over( order by ${condition.orderBy}) as RowNumber
        </if>
        from ${condition.mainTable} ${condition.mainAlias} ${condition.joins}
        <trim prefix="where" prefixOverrides="and">
            <if test="condition.condition!='' and condition.condition!=null">
                and ${condition.condition}
            </if>
        </trim>

    </select>

    <select id="totalNum" resultType="int">
        select count(1) from ${condition.mainTable} ${condition.mainAlias} ${condition.joins}
        <trim prefix="where">
            ${condition.condition}
        </trim>
    </select>

    <insert id="insert">
        insert into ${entityName}
        <foreach item="value" index="key" collection="data" separator=" , " open="(" close=")">
            ${key}
        </foreach>
        values
        <foreach item="value" index="key" collection="data" separator=" , " open="(" close=")">
            #{value}
        </foreach>
    </insert>

    <update id="update">
        update ${entityName} a
        set
        <foreach collection="data" separator="," item="value" index="key">
            a.${key} = #{value}
        </foreach>
        <trim prefix="where" prefixOverrides="and" >
            <foreach collection="cons" separator="," item="value" index="key">
                a.${key} = #{value}
            </foreach>
        </trim>
    </update>

    <delete id="delete">
        delete from ${entityName} a
        <trim prefix="where" prefixOverrides="and" >
            <foreach collection="cons" separator="," item="value" index="key">
                a.${key} = #{value}
            </foreach>
        </trim>
    </delete>

    <insert id="insertAll">
        insert all
        <foreach item="mapOne" index="index" collection="data" separator=" ">
        into ${entityName}
            <foreach item="value" index="key" collection="keys" separator=" , " open="(" close=")">
                ${value}
            </foreach>
            values
            <foreach collection="mapOne" index="key" item="dataValue" separator="," close=")" open="(">
                #{dataValue}
            </foreach>
         </foreach>
        select 1 from dual
    </insert>

    <update id="updateAll">
        update ${entityName} set
        <foreach collection="data" index="key" item="value" separator=",">
            <if test="value !=null and value !=''">
                ${key} = ${value}
            </if>
        </foreach>
        where
        <foreach collection="pks" separator="and" item="pk" index="key">
            ${key} in
            <foreach collection="pk" item="value" separator="," open="(" close=")" index="i">
                #{value}
            </foreach>
        </foreach>
    </update>

    <delete id="deleteAll">
        delete from ${entityName} where
        <foreach collection="pks" separator="and" item="pk" index="key">
            ${key} in
            <foreach collection="pk" item="value" separator="," open="(" close=")" index="i">
                #{value}
            </foreach>
        </foreach>
    </delete>

</mapper>